(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    196707,       4001]
NotebookOptionsPosition[    191457,       3900]
NotebookOutlinePosition[    191829,       3916]
CellTagsIndexPosition[    191786,       3913]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["2D Plotting in Mathematica", "Title",
 CellChangeTimes->{{3.7489998307284384`*^9, 
  3.748999834743191*^9}},ExpressionUUID->"194a0681-134b-4bdb-8b7c-\
0a4af7b3f7d2"],

Cell[TextData[StyleBox["Christopher Lum\nlum@uw.edu",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7491659180402164`*^9, 
  3.749165920898012*^9}},ExpressionUUID->"76016fd5-6da7-4176-a6a8-\
96930d376508"],

Cell[TextData[{
 "This document accompanies the YouTube video at ",
 ButtonBox["https://youtu.be/j-utznrXmcY.",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://youtu.be/j-utznrXmcY"], None},
  ButtonNote->"https://youtu.be/j-utznrXmcY"]
}], "Text",
 CellChangeTimes->{{3.749165934093587*^9, 3.749165947487901*^9}, {
  3.749166561986328*^9, 
  3.749166577758423*^9}},ExpressionUUID->"416625ed-2330-4171-98bc-\
72be12c1d16b"],

Cell[CellGroupData[{

Cell["Plot", "Section",
 CellChangeTimes->{{3.748999845958769*^9, 
  3.7489998464152317`*^9}},ExpressionUUID->"8a67ae36-85ad-4583-91eb-\
c24208147c18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"t", "*", 
    RowBox[{"Cos", "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", " ", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plotting", " ", "options"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<f(t)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<A simple function using the 'Plot' command\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Orange", ",", "Dashed", ",", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.748999855411892*^9, 3.749000074704133*^9}, {
  3.7490001048542004`*^9, 
  3.749000128710212*^9}},ExpressionUUID->"21a4f68e-cf05-42d3-a720-\
c1f8fd4c7855"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0.5, 0], Thickness[0.02], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$5415#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"f(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"A simple function using the 'Plot' command\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.748999880522521*^9, 3.7489999239897785`*^9, {3.748999986985166*^9, 
   3.749000077384595*^9}, {3.749000111573079*^9, 
   3.7490001308390055`*^9}},ExpressionUUID->"eac33fb3-7ebf-4d43-8986-\
f157720609c5"]
}, Open  ]],

Cell["Adding multiple functions to the same set of axes", "Text",
 CellChangeTimes->{{3.749001144603157*^9, 
  3.749001149713362*^9}},ExpressionUUID->"ce079a79-4908-4e8a-b816-\
890fd2e51b92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "*", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"t", "-", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "options"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7490011508727093`*^9, 
  3.749001223970925*^9}},ExpressionUUID->"b6f862ac-ccb2-4d25-b1e8-\
bce5a804dec3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7792#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pBCZ
          "]]}, Annotation[#, "Charting`Private`Tag$7792#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"t", " ", 
         RowBox[{"cos", "(", "t", ")"}]}], 
       RowBox[{"2", " ", 
         RowBox[{"sin", "(", 
           RowBox[{"t", "-", 
             FractionBox["\[Pi]", "2"]}], ")"}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.749001186641908*^9, 
  3.7490012257965136`*^9},ExpressionUUID->"312ee1e5-d223-4152-9e64-\
35e8ef3a432c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Disadvantages",
  FontVariations->{"Underline"->True}],
 "\n1.  The domain of the functions must be the same.\n2.  Difficult to \
control the plotting style of the two data sets.\n3.  Not a lot of legend \
control"
}], "Text",
 CellChangeTimes->{{3.749001251160185*^9, 
  3.749001306057412*^9}},ExpressionUUID->"331690c2-5328-4f0c-b73b-\
be331e6cfdde"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show", "Section",
 CellChangeTimes->{{3.7490013380460625`*^9, 
  3.7490013449143367`*^9}},ExpressionUUID->"e75b7974-4672-40d3-9593-\
2b264f6c312d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"t", "*", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"4", " ", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", "-", 
         RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", 
        RowBox[{"3", " ", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Legended", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"plot1", ",", "plot2", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Plot", " ", "options", " ", "for", " ", "the", " ", "composite", " ", 
       "graphic"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Multiple plots using the 'Show' command\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<f(t)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Add", " ", "legend", " ", "information"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Green"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Temperature\>\"", ",", "\"\<Population\>\""}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.74900297174598*^9, 3.7490031598984823`*^9}, {
  3.7490031943526525`*^9, 
  3.749003249225771*^9}},ExpressionUUID->"a6cec7a4-e9c5-4d03-9cd3-\
75164b6a038f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$7031#1"]& ]}}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$7072#1"]& ]}}, {}, {}}}, {
    PlotLabel -> 
     FormBox["\"Multiple plots using the 'Show' command\"", TraditionalForm], 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"f(t)\"", TraditionalForm]}, PlotRange -> All, GridLines -> 
     Automatic, DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 4 Pi}, {-9.47729017643383, 12.566370357902217`}}, {{
        0, 12.566370614359172`}, {-9.47729017643383, 12.566370357902217`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Temperature\"", "\"Population\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0.5, 0]"], Appearance -> None, BaseStyle -> {},
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.749002992910743*^9, 3.749003081278907*^9}, 
   3.7490031617638283`*^9, 
   3.749003263657936*^9},ExpressionUUID->"79954918-c0fc-48b5-bdea-\
2e5543eee0cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ListPlot", "Section",
 CellChangeTimes->{{3.74913072748193*^9, 
  3.7491307288908777`*^9}},ExpressionUUID->"7c5009d0-3803-416c-a47a-\
b2fc0de0d565"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pt1", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pt1", "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"pt1", ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plotting", " ", "options"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7491307390687666`*^9, 
  3.749130791827629*^9}},ExpressionUUID->"21165c4e-6201-4326-874c-\
275495187cd6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7491307520187798`*^9, 
  3.749130792365302*^9}},ExpressionUUID->"8a5718ee-98e2-48f1-8673-\
74e0b8cf2a76"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.05], AbsoluteThickness[1.6], 
     PointBox[{{1., 2.}, {1., 2.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.}, {0, 4.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7491307520187798`*^9, 
  3.749130792414276*^9}},ExpressionUUID->"d995c111-ab4a-475a-8d3a-\
0abb5d36b86e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"(", GridBox[{
      {"1", "2"},
      {"2", "3"},
      {"3", 
       RowBox[{"-", "1"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotA", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"points", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7491308022416563`*^9, 
  3.7491308763663692`*^9}},ExpressionUUID->"94697d97-dc72-46c4-a396-\
fdd4dfdf06bd"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 1, 0], PointSize[0.05], AbsoluteThickness[1.6], 
     PointBox[{{1., 2.}, {2., 3.}, {3., -1.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.96875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 3.}, {-1., 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749130836032892*^9, 3.74913084538766*^9}, 
   3.7491308801971593`*^9},ExpressionUUID->"9161595a-da67-4c93-98cc-\
436163b80e7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotB", "=", 
  RowBox[{"ListLinePlot", "[", "points", "]"}]}]], "Input",
 CellChangeTimes->{{3.749130862193158*^9, 
  3.7491308832103157`*^9}},ExpressionUUID->"1ec6922f-a2a6-4bd6-9547-\
251b3af9e2c1"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 2.}, {2., 3.}, {3., -1.}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.96875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 3.}, {-1., 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7491308667841535`*^9, 
  3.7491308841008024`*^9}},ExpressionUUID->"1d4c9dd4-5247-4a97-8d84-\
85509b0ec1ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plotA", ",", "plotB"}], "]"}]], "Input",
 CellChangeTimes->{{3.749130888496664*^9, 
  3.7491308923378057`*^9}},ExpressionUUID->"a9be0467-5455-4e62-b9b7-\
2344f1714a70"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0, 1, 0], PointSize[0.05], AbsoluteThickness[1.6], 
      PointBox[{{1., 2.}, {2., 3.}, {
       3., -1.}}]}, {}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      LineBox[{{1., 2.}, {2., 3.}, {3., -1.}}]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.96875, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 3.}, {-1., 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7491308926756096`*^9},ExpressionUUID->"7d5a357f-e3fc-4352-98eb-\
1f0e29b2370f"]
}, Open  ]],

Cell["Make some fake data", "Text",
 CellChangeTimes->{{3.7491310057131343`*^9, 
  3.7491310079133587`*^9}},ExpressionUUID->"9caa74c8-7010-4c56-b7c0-\
618120aa2d55"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "+", 
         RowBox[{"RandomReal", "[", "]"}], "-", "0.5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", " ", 
        RowBox[{"4", " ", "\[Pi]"}], ",", " ", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"dataPlot", "=", 
  RowBox[{"ListPlot", "[", "data", "]"}]}]}], "Input",
 CellChangeTimes->{{3.749131009594962*^9, 
  3.749131084402198*^9}},ExpressionUUID->"1e64293d-4e16-4543-8ddf-\
6fbcd916c4d0"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
wIVXbu//igL/BcVq/F8=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 12.566370614359172`}, {-2.413510816923676, 
    2.458836648331192}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7491310625768294`*^9, 
  3.7491310867929735`*^9}},ExpressionUUID->"dbab8469-9244-48a4-9f65-\
87611344558e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7491310931037345`*^9, 
  3.74913115093016*^9}},ExpressionUUID->"d14602fd-d73c-44a9-95e4-\
e6cebd126cdf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
bnN4Wtbqdn6EMGzKV/ew/jSHxxP4DR5fE4a09sD59O9zeIT5qur+LWEQZa81
q+ubw33GxmOxmcIwvVjO84cwF393Ydr5vxWGwayxlqxVXFyRwhPUExWBsPij
i94ncfFr7ZI7mjIicHO+7sv3j7i4NO+YoZqyCMzvdO15WsjFzyv7PSS0RGD5
WXq12kcuzuz9VvzXSgT0p1T9b85y8ZWlRYczwqn29WFFw1t4uNaouedYtAgQ
C8ljnTt4mLZ8yt0yXgQsErPXFe3l4QsrTWy70kUgd+j9oNhxHj5pUcRmVonA
yO3OUIdEHvZ1KvqVKCgKjRPdTd6dPJzl3OxyUEIUPtc3nYro4+Eel6lPZvNE
4fCP4SeRozy8293kdRtTFBzbTC4aCRDs4lV0h2EhCucD3Taz1Am2Pl7kePOM
KNww5Cw94kzwhZDm2r2RonA/J1moyI3gitCptcYxoiA8cWus3ZPgNWdNljYk
i0JZqK7kp0MEr7hUJCmHRaFA+eulTRcJPnql+XxHtSh0Ka28m3yJ4LzoKU7O
R1GILNG7+/UawXpxJn/tflD3R4g6/0kgWPNeUdUVriho6YYsS31CsGdSs5mb
MA1OV99aLZRLcErKVP4SKRoIvMyWtikgWC3d5H6tGg3ip24LH39F8I7MbYw7
mjQo35eq4VlO8O2HwTE+ujR4EU6b0asieN7TojCaGQ2aAuPf+9YRvOVZ80Tz
OhosXNaM2z4RHJ035Ze5iQaStx7t1m8gWLzIxNXKlQbuYidTj7cSvKF42xfF
PTRQX3dipX87weGlwTbdvjTgOyV5xOYnwQJlRSYXQmjQkGhUltJF8CMp+Qzu
ORoYPH2d5viHYAdXP4XgyzQQUX39svMvwZys6nPDcTT49sle2K6f4AeT6iM+
92gw1FNx8uYgwbbrT+78nUYDxyfn5hcPEzwe+/WDWzYNKlJ0el+MErxe79Kj
za8pPQw9h2wnCe4P6aK/q6YBr39A69cUwTdq1kRYfKLBd7UdZ+1nCDZTSpgo
baZB3EExTiKH4O49Y3uWd9Bg3cfwmOpZKv/c/7487aXB74CL697PUX6STGCP
0CC3vkPuCZfgH7YCOakzNDjx8B7Hm0flf8dtvqqAGOQLdM/xE4L1ewsv3xAX
g8NLpOnBFDctl+NIzRMD+ssbm2ooDjt/wDtCVQwEb82/NUGx1ueqJj5NMfjW
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
UxJz
       "]]},
     Annotation[#, "Charting`Private`Tag$18633#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 4 Pi}, {-1.999999025689752, 1.9999999999999343`}}, {{
     0, 12.566370614359172`}, {-1.999999025689752, 1.9999999999999343`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749131114752319*^9, 
  3.7491311513809004`*^9}},ExpressionUUID->"42933607-fd49-4d51-8b41-\
981918cebef6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"dataPlot", ",", "fitPlot", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Plot", " ", "Options"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<f(t\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Add", " ", "legend", " ", "information"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SwatchLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "\"\<Best Fit\>\""}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7491311621228456`*^9, 
  3.7491312435970526`*^9}},ExpressionUUID->"b641c8b4-d03f-4ccc-9a28-\
443c9964177f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
wIVXbu//igL/BcVq/F8=
          "]]}, {}}}, {}, {}, {}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Thickness[0.01]], 
          LineBox[CompressedData["
1:eJw1mnk4lN/7x+3GvmSZQcWMMmSJFBWdO4WUj7IkZalUQipUlKTd0iJSSmUr
W4uEEKqDkKRSZIlKQpJ9N8yc3/P94zd/zFyv63nOc+77/b7P8pxrNDwPO+wT
4OPju099/e9XEIt//L08dk0Lj/zvgxb9fb16QdxhVFKr7TdMMeeZwd7W66fR
D1p1bjnFuZPoq9zTCGS6QuDzEYq7FbynC69fQ6eYOrUiFF9h1Eg9LY1D34cy
E0N4BGWw3ZL5nt5CCfJCtp+4BJWZDC91TLmLzmzp/ipE8TerCxXp15PRpjJZ
M9U5qj8dSZ3QilTUUeNzWn6WoAijpsD00gfIX300pW+GIIVVKaUfn6ejs+/f
pT6YJih1ra/QdHYm+qxqcN58iiB9G+P/NDIfosU5YVYvJggq3cK7uTHlMRo/
uGxg3jhBX3de10q8noMuhm7+d3CYymeZvunvqmdovvB6K79BgoJN4tqDK3LR
Xq0Xlzf1EySE3BelluYjx9jwH0/+EFRrUfFu+Yvn6DNr17B+N0GxVlqHap8X
IJtfRROxnQQtsBspHMsuQvvmdLs57QR12Tu7Rj56gRr8Sxv5vhH0eGspUcss
RhdNH1X8aSLI1P3iBquUUhQu2pzuUk+Qgx/j2+3rGKWf3dhdXU6QpCnC8dZl
KEqim/n1FUHDxQFyv6rK0OdVtiGVxQQVvmoqOFZRjuSrA8OtcglaV5XCSyp9
gwwHHS61JBG02Lphy9+VlcjCKU9iOIEg8XfCD5a9qES0pE/vem8QVF/na13z
vAqF6k/KhF0iyL3ROGYk+y2q3unhZHqUIHDe37latwbprrLatOMQQZotCcbh
j2rQVOr2h+7eBPW18VpUMt+h9wX+eTQ3Sr/fNRrrU94ji7SO+8NrKX1G3fLj
r39CR0RZeVI0gq4q3jErk6pHa6OPB6YQHvqSe3Hhcod6pPw5olRmiodc+9y6
F7TVo4dj+jIXunnokKtEwGj/ZxTZxWmpLOOhG+bekQmyjWiwocz9mT8PtbY6
HpDe2ogmJ3kJsl48tCAI2Z1PaEQ9GlnSdq48lPlUSeEg8yvKd0/9ssuSh0oW
ViWDcRNKW5qh9UeZh37yM4v+bGtBW2I23D1XyEWaSVJ33O61IMEw/pCXD7nI
e9VM6OeOFuSSl+jdeI+LRgPrLUp9WlHMg6JnSee4SKgr7GP0yW/oReyhuCRb
LtKpbutentyOxv1lt2//NodWV20UtzjSgSJVZjyXfp9Fso0Zn0ziOtAZr3z7
Ax9mUVenwE29/A60Vr3mwqVXsyiar3QhY6wDuckFTx1LnEWdq5csHw78hZJj
dD8LuM2iyDyJXUmBnSjycmG5QCMHNSXXFXACupBtk+FJhWcz6PFT9snh2C4U
9awlb/reDDrz6gL05Hahi0497m+iZpB2m9n7zyNdaEXC2A7JPTMoVCm7Iyug
G82sjpE5rDCDWFevSmwL6EECx6cfRQZOI/8Qu935/r3IZk3a1F21KbTxkFkW
LaYXlT9Iku0WmUIsT50h95xepNjfqkgfmURNNiKnaIO9SH7HG1Ozqklkznh9
2/3AX/Qm7b3+ab9JJP5Cr17Uqw+Jb1KLEyiaQOkTksjNtR+ZO7suTDAbRwdf
7IsWYA2j0t7IvfNkRlBjr41Ypuc4cmsKnbIt7ESXDCb5CrdPI9HV2h/URIpR
wJKam2Xpc+jLepEYn642zNlz4On3Q3zwJVz3LXo9gHfJjR1/GcQHQp+07EYm
BnDV65B1d8P4wH7XwNeLeoM4hnGpxSWaD87vrJHddm8Qa33KEmjM5oMdetdc
bhwfwk6repxr+/mgYdmqtvSbw/ip7G5S6MsPV6Y7xdXNRrHC6953NwP5wf9m
8I+JraP4xAH/G0dD+MFaQWms+PAoXl99WtvoEj9U+1aclHwwittOJjlmP+SH
qcIOpxbaGKb9act80MsPm7J9nk3Uj2HPV85bYrwEoKw6QjXZYQIbFdLlGYcF
4GJ5zCpRvwkskPOtITVYAPhYJdPOFyfw/RSPbfmRAuAyZv/zSdEE7jzv5dH0
SAAepQwvN1CdxJ4bg/zUhgRgrmbU+9h3iptvRmYFC8Ibw6xfG+ymsVH9to2G
ZwRhjyFz3eG901jgHUOyJFIQlunu6TwRMo3vlyRee58gCEWuQkGrM6ZxZ2J6
/GCpIOTIr119cG4ae+4tSDPmE4J5ccpjxx7M4D0jjWVlkUIwIs9/+ngbB+8K
idn2IkYItn4UK37dz8FugraDObeFQMixaU0fl4OdFd+oJmcJwQXHor/DC2fx
hpW5QadqhEBkwrGnxHMW65+9qruKJgxN4p/Vl/2exTriNm8MZYXhhNEC5+rR
WawVJ7RDmy4MBif+azAXmMPq6Scj6GxhmGqU825Vn8Pz3vl0TloLw2Ox407l
bnN4Wtbqdn6EMGzKV/ew/jSHxxP4DR5fE4a09sD59O9zeIT5qur+LWEQZa81
q+ubw33GxmOxmcIwvVjO84cwF393Ydr5vxWGwayxlqxVXFyRwhPUExWBsPij
i94ncfFr7ZI7mjIicHO+7sv3j7i4NO+YoZqyCMzvdO15WsjFzyv7PSS0RGD5
WXq12kcuzuz9VvzXSgT0p1T9b85y8ZWlRYczwqn29WFFw1t4uNaouedYtAgQ
C8ljnTt4mLZ8yt0yXgQsErPXFe3l4QsrTWy70kUgd+j9oNhxHj5pUcRmVonA
yO3OUIdEHvZ1KvqVKCgKjRPdTd6dPJzl3OxyUEIUPtc3nYro4+Eel6lPZvNE
4fCP4SeRozy8293kdRtTFBzbTC4aCRDs4lV0h2EhCucD3Taz1Am2Pl7kePOM
KNww5Cw94kzwhZDm2r2RonA/J1moyI3gitCptcYxoiA8cWus3ZPgNWdNljYk
i0JZqK7kp0MEr7hUJCmHRaFA+eulTRcJPnql+XxHtSh0Ka28m3yJ4LzoKU7O
R1GILNG7+/UawXpxJn/tflD3R4g6/0kgWPNeUdUVriho6YYsS31CsGdSs5mb
MA1OV99aLZRLcErKVP4SKRoIvMyWtikgWC3d5H6tGg3ip24LH39F8I7MbYw7
mjQo35eq4VlO8O2HwTE+ujR4EU6b0asieN7TojCaGQ2aAuPf+9YRvOVZ80Tz
OhosXNaM2z4RHJ035Ze5iQaStx7t1m8gWLzIxNXKlQbuYidTj7cSvKF42xfF
PTRQX3dipX87weGlwTbdvjTgOyV5xOYnwQJlRSYXQmjQkGhUltJF8CMp+Qzu
ORoYPH2d5viHYAdXP4XgyzQQUX39svMvwZys6nPDcTT49sle2K6f4AeT6iM+
92gw1FNx8uYgwbbrT+78nUYDxyfn5hcPEzwe+/WDWzYNKlJ0el+MErxe79Kj
za8pPQw9h2wnCe4P6aK/q6YBr39A69cUwTdq1kRYfKLBd7UdZ+1nCDZTSpgo
baZB3EExTiKH4O49Y3uWd9Bg3cfwmOpZKv/c/7487aXB74CL697PUX6STGCP
0CC3vkPuCZfgH7YCOakzNDjx8B7Hm0flf8dtvqqAGOQLdM/xE4L1ewsv3xAX
g8NLpOnBFDctl+NIzRMD+ssbm2ooDjt/wDtCVQwEb82/NUGx1ueqJj5NMfjW
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
UxJz
           "]]}, 
         Annotation[#, "Charting`Private`Tag$18633#1"]& ]}}, {}, {}}}, {
    AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"f(t\"", TraditionalForm]}, GridLines -> Automatic, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 12.566370614359172`}, {-2.413510816923676, 
       2.458836648331192}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 12.566370614359172`}, {-2.413510816923676, 
       2.458836648331192}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Data\"", "\"Best Fit\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7491312451054416`*^9},ExpressionUUID->"406ee14b-5a74-4a2a-953c-\
109f4345c2ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DiscretePlot", "Section",
 CellChangeTimes->{{3.7491314682713985`*^9, 
  3.749131469943433*^9}},ExpressionUUID->"1de7c140-5814-46a5-ba76-\
471607e0ae9a"],

Cell["Plot sin(x) with x every 10 degrees", "Text",
 CellChangeTimes->{{3.7491314797029405`*^9, 
  3.749131486934376*^9}},ExpressionUUID->"b1635f97-9e0e-4983-a8fe-\
603d76e23c9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74913148790836*^9, 
  3.749131494494671*^9}},ExpressionUUID->"84aa7a71-7545-4164-8b25-\
3b19451b2e8b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1Akw1lsDx3Hbjep2r0ooIUuYkDa3uqlfyVJ0hUiJyu6qKKFNtKLFTQ+5
JUsqS5EeCRXJrYjIiIeyJ1vWg3ie8yDe08x7Zs585zNzzpn/zP/MUXH2sXYT
ExERiWPzZ8Vfzaho03faIPb/Lu4uWKcUCXD9N2r+7BhXz7WOsx0XxlfP+dkO
GU+aw9kHO99wbjZrvcmF10kcH8z8S/XeHdaafRzNOE4wIlcrPQxjtT44v/4m
5xr0dWLaTVivDztkRXMS0NJy54vF9QSsKzKbYXiUi4zUEkOHw1wcPmnhlHX4
Gerttzis9HiGQ8/c/hFTK0SiamLQXPlC8L5tnZ7i/BYV8/j/xm97i8t6fJGc
3SW4qfekRHdVCY5ol9woTCqHrdUZgwzPcoy5HMho8q6EjM+MyvcbK+H8cqdl
hHsVsjQ1FpDFVXAZ4hUWhvHQ8jQsaJoeD1eX5fokh9TCUDpgt7V0LcQKc1df
OPkZXnf7Cz99/YTZS8wrWm7WI3C+X+H12jpsSTC8N8hpxJSS7hubuw2QI+Um
wbnN6Nua4v57eBNi3r0QFf/7C9qSiTTHvQUGipumFrm24ld5BW/dq1+g/UW6
/bTfV0ymx37r9m3Fo9Q5ntm+bdisU1xXbfwVgc2O1doh7bAnc3tNFrfhiMEa
8/ioDph5OBUbjbdhLMHIuTeiE3ZmAcdbX7aj8nDM/mN3uyB696yp3pUOrDVV
nWxK/IaeCa9Sa+NOlBqvTd0Y2w1FUfnSQ/xOJGXeWvs1rQdlEzmfd3G7ME9N
x2vvg16c22LfVmP3DVWiUufm5/dBPjAkPn5aN7KljiZXlvbjoG5N+Kq0bujM
k/ZyLhpAdKGp3l8bekD+4cusrCV4Zm3UmlLbA7XQUD0fr0GMnlUbFNnbi6/2
DfWGXYPw8FMMUmzsxZaOamG29xAKzGe5Bjj24bivm6ds/xDC7PrpREUfLHJu
m8kGDGPmAqlryob9GJjwChTnD0Ojavn6Ocn9SPx09qn30e9Q185MbxEZwJjn
+v0nxr9DTZ7Kr90zAMUf1/ccOTmChX1ZjytTBtBpeuW9lMQoxislv24bHsAb
jXIoXRmFVNOqS3krCLykkiVUpvPR6JP+q5gHQZlYWPjmmXyErOBK8Zh1fvwt
6z6Lj/2iEf5JngRkSFcrbTYfSo28RBMvAr+GbHP9BXx8fDXT6NwhgtMZRZyt
2nxs8qZpzUcJImw6Fvn+xYdN2f1B7TMEuXfU17+5zscWB/ercv8SqE8Znfov
ko/MjGz5F8wRjm7PX93gY8n785oONwk8FyTr59/iY/52Tnn8LYIFUZpLsxP5
uJi4YpVSLEFg6BLllEw+NK3tjv2SSGDovUz0ykc+zly0yPd/SJBRbolL1Xzc
d30ZKZVGoKB95HRoDR8e9nv7Y5hHujKF5+v4WBqgq1mQTpDktHI4sJWPDuv/
nk5mEEjZ/tHmPcTH7iUf9D2zCCrWGRRZzxbgT70thY15BJef+Y+bzBXgjYum
qWM+gan+4+Xr5glgZ9do08RcuFQ1Xm2+ALy6VxKNLwmyVKSOjSwSoNJoTU71
K4Kbkjyt6GUCRLhv25v+hsCl+sDVuu0CHHC3yBErI1hkmfT6g5UAp4xtZfyY
G8ub6X87BHhkSmk7885iK7eHdgKsHp+5s6icYMvz1RtO7RPgyMF1+85UECxN
EB9c6COAeo1ZestHAup1e8f+fwQgxbM0Nn8muHbynmRwhAAzWkeTHjFrXE7L
i+MI8PhzQbRcHYHtgzy1hmgBUoZ733czP+lq+G6bIECoQ/Dp0AaCg64Lo8y5
7Lw7gumpzQRfHON4f1QJkJ8h+/R0O8GxQ0lhtjwBknK422qZfzv9yMCvVgB/
wYjt0g6C9bEv72fWC5Aj8H/RyBxT3+Sn0yaAvrle2YouAhs7pXmqIwJIGK2Y
8baboMQywXaWLEV/zY2RkwPs/r7tKJCUp9CZ2NmTzzxrjY6W2AIKD3U1l0lm
a+XnY3xFioFTn5uCCUFDf1XCl8UUPc9vCwIHCQYuT+vJ0qeg5hl5+4bZ/Zvc
tiNjNcWNlLTWW8wrfSPzU9dS6Hfdv1zNfHz3omtx6ymawkPdjL8TiGn9uSrU
mOLc5tENaiME84oOBdnbUkj25gS/G2XvwpqnXTZ2FFpDv9YIme3Txyy376YI
SbZ6pM0niI8MVTNypODK3O8MZ9ZyTizRdaMoVtkVuE1AYDDFmyPqT7HT0WHl
E0rQ7KsQOB5A8V3OJLeR+WynU8focYrDf8wtmCYkKP4wkNsTSKH6u63Nbubt
sVKOvAsUMmlu9yiz81qDlJQoiuDMVWXK4wR/938YbYymkItqPW3CfDhxn9Gc
WxR94rejDjIHTz/fGhhH4ZiybCCHObauVME6meKHR7WV0QTBvfA9XqGpFK4z
Pqq7Mz/c1P8s/yFb/6pmTyjz8wfSOzUfU6g0Do2+Y649YRcxkcu+p8OlftMP
gibd7ublL9j+mZc+7GVubz2p65FP8TKUq36K+fvW+PcfCykKHCSmMpmlF3RI
pJRSpM/LdJGfJJCrCNjRWEaxyr8+YBmz0jmpu7Mr2P/XERswZdbt0UZgFYV8
g5mUP7PZC98TVg0U/MPZfe+YrbwlSkKaKNy4RcoNzLtUo2XzWyisJD/m9DN7
XH6epdFOMRH5SXr2FIH3BnMxh06K3YpV1SrMAcONlte/URxyKx5bznzBXmRg
vI8iVRjjZ8l85TeOwXJCsTLz5Lu9zJzXalfchyjWT1oHHWROXGKq9XGUYqtl
n1wIc2rz54BplCLgc/rYdWYux6to3RjFiQnXTXHMBWPhzsmTFBLIG8tkLspQ
zmwQESKI7jqUx1zunDklLS7Ek/P9m98y82Q3W5j8IsSF7ONB5cwN73mxpySF
+OQ2tpDH/DXIvZc7XYizPr7KDcw9K+jazplC7OR+udjKPNR5KUzhNyGUpxtb
djHTGIVPltJC3HFMCOpjnrJ4tDhkjhDRUUR6iHmaOPzyZITI/ldfcpR5Vm7l
60FZIdJ2HHGizDIHnGdrzBdi0bO7yuPMCsoj+/YoCPE0t3TTD2bV6osZEYpC
TJl2vptkXhIq96NIWYhIJ5o5xbx83QPzcRUhxqd+DoL/Ab0LRyQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$20790#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.9999999999999994}}, {{
     0, 1.5707963267948966`}, {0., 0.9999999999999994}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7491314949024224`*^9},ExpressionUUID->"00fb24d7-288d-4f5c-817e-\
9f319c902068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"10", " ", 
      FractionBox["\[Pi]", "180"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7491315035932493`*^9, 
  3.749131518729164*^9}},ExpressionUUID->"41b69737-99f6-446b-9f9d-\
da48d350623a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0., 0.}, {0., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0.17453292519943295`, 0.17364817766693033`}, {
         0.17453292519943295`, 0}}, {{0.3490658503988659, 
         0.3420201433256687}, {0.3490658503988659, 0}}, {{0.5235987755982988, 
         0.5}, {0.5235987755982988, 0}}, {{0.6981317007977318, 
         0.6427876096865393}, {0.6981317007977318, 0}}, {{0.8726646259971648, 
         0.766044443118978}, {0.8726646259971648, 0}}, {{1.0471975511965976`, 
         0.8660254037844386}, {1.0471975511965976`, 0}}, {{
         1.2217304763960306`, 0.9396926207859084}, {
         1.2217304763960306`, 0}}, {{1.3962634015954636`, 
         0.984807753012208}, {1.3962634015954636`, 0}}, {{1.5707963267948966`,
          1.}, {1.5707963267948966`, 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {0.17453292519943295`, 0.17364817766693033`}, {
     0.3490658503988659, 0.3420201433256687}, {0.5235987755982988, 0.5}, {
     0.6981317007977318, 0.6427876096865393}, {0.8726646259971648, 
     0.766044443118978}, {1.0471975511965976`, 0.8660254037844386}, {
     1.2217304763960306`, 0.9396926207859084}, {1.3962634015954636`, 
     0.984807753012208}, {1.5707963267948966`, 1.}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0, 1.}}, {{0, 1.5707963267948966`}, {
     0, 1.}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7491315191714725`*^9},ExpressionUUID->"d1ebf21a-4604-4ab3-ba5f-\
600aeef0fff3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", 
     RowBox[{"10", " ", 
      FractionBox["\[Pi]", "180"]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"additional", " ", "options"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ExtentSize", "\[Rule]", "Right"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ExtentMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Filled\>\"", ",", "\"\<Empty\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.749131537983447*^9, 
  3.74913158259251*^9}},ExpressionUUID->"cdab4d25-7cba-4b93-a062-\
39be3e7de0a5"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0., 0}, {0.17453292519943295, 0.}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.17453292519943295, 0}, \
{0.3490658503988659, 0.17364817766693033}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.3490658503988659, 0}, \
{0.5235987755982988, 0.3420201433256687}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.5235987755982988, 0}, {0.6981317007977318, 0.5}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.6981317007977318, 0}, \
{0.8726646259971648, 0.6427876096865393}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.8726646259971648, 0}, \
{1.0471975511965976, 0.766044443118978}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.0471975511965976, 0}, \
{1.2217304763960306, 0.8660254037844386}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.2217304763960306, 0}, \
{1.3962634015954636, 0.9396926207859084}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.3962634015954636, 0}, \
{1.5707963267948966, 0.984807753012208}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.5707963267948966, 0}, {1.7453292519943295, 1.}]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, {{}, LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgAmImKEYH7S7PvSTCj9mj8zuLueukrI7ZQ/jXMPhfubtK
Vjy+ap9arGsRdPABBh9i2gOo+mcYfBkxm6DtE5/YrxRdGHvvzWsMvmXA+UX5
zS+g5n3A4K/yiXhRte21/bfoLkfTns8YfBndIKdvgu+g9n3D4IvLNPZ0N7+3
l9B1Cfmt+BODD3HvB6h7fsP5ALpbgL8=
      "]]}, {}, {
     {AbsolutePointSize[5], 
      PointBox[{{0., 0.}, {0.17453292519943295`, 0.17364817766693033`}, {
       0.3490658503988659, 0.3420201433256687}, {0.5235987755982988, 0.5}, {
       0.6981317007977318, 0.6427876096865393}, {0.8726646259971648, 
       0.766044443118978}, {1.0471975511965976`, 0.8660254037844386}, {
       1.2217304763960306`, 0.9396926207859084}, {1.3962634015954636`, 
       0.984807753012208}, {1.5707963267948966`, 1.}}]}, {
      {AbsolutePointSize[5], 
       PointBox[{{0.17453292519943295`, 0.}, {0.3490658503988659, 
        0.17364817766693033`}, {0.5235987755982988, 0.3420201433256687}, {
        0.6981317007977318, 0.5}, {0.8726646259971648, 0.6427876096865393}, {
        1.0471975511965976`, 0.766044443118978}, {1.2217304763960306`, 
        0.8660254037844386}, {1.3962634015954636`, 0.9396926207859084}, {
        1.5707963267948966`, 0.984807753012208}, {1.7453292519943295`, 1.}}]}, 
      {GrayLevel[1], AbsolutePointSize[3], 
       PointBox[{{0.17453292519943295`, 0.}, {0.3490658503988659, 
        0.17364817766693033`}, {0.5235987755982988, 0.3420201433256687}, {
        0.6981317007977318, 0.5}, {0.8726646259971648, 0.6427876096865393}, {
        1.0471975511965976`, 0.766044443118978}, {1.2217304763960306`, 
        0.8660254037844386}, {1.3962634015954636`, 0.9396926207859084}, {
        1.5707963267948966`, 0.984807753012208}, {1.7453292519943295`, 
        1.}}]}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->
   NCache[{{0, Rational[5, 9] Pi}, {0, 1.}}, {{0, 1.7453292519943295`}, {
     0, 1.}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749131561443403*^9, 
  3.749131583661894*^9}},ExpressionUUID->"7c2fb5ec-cf5a-4204-a4f5-\
7f7a5d19ad25"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histogram", "Section",
 CellChangeTimes->{{3.7491316459270678`*^9, 
  3.749131647486497*^9}},ExpressionUUID->"b351bce7-eb18-46aa-b45b-\
5a6bef53650d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data2", "//", "MatrixForm"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "data2", "]"}]}], "Input",
 CellChangeTimes->{{3.7491316488187323`*^9, 
  3.749131687158247*^9}},ExpressionUUID->"ac658cd4-691c-45f5-b3eb-\
3479fc64644e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.616], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.616], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.1, 104.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{32.57761208967173, 
          73.90317253803042}, {-99.67479535051275, 115.72128254052315`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, {0.2, 108.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{73.27817253803042, 
          114.6037329863891}, {-107.9352214232449, 115.72128254052315`}}],
        StatusArea[#, 108]& ,
        TagBoxNote->"108"],
       StyleBox["108", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[108, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.2, 0}, {0.3, 99.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.9787329863891, 
          155.30429343474776`}, {-89.34926275959755, 115.72128254052315`}}],
        StatusArea[#, 99]& ,
        TagBoxNote->"99"],
       StyleBox["99", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[99, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, {0.4, 86.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{154.67929343474776`, 
          196.00485388310648`}, {-62.50287802321809, 115.72128254052315`}}],
        StatusArea[#, 86]& ,
        TagBoxNote->"86"],
       StyleBox["86", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[86, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.4, 0}, {0.5, 118.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{195.37985388310648`, 
          236.70541433146514`}, {-128.58628660507526`, 115.72128254052313`}}],
        StatusArea[#, 118]& ,
        TagBoxNote->"118"],
       StyleBox["118", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[118, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {0.6, 97.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{236.08041433146514`, 
          277.4059747798238}, {-85.21904972323149, 115.72128254052315`}}],
        StatusArea[#, 97]& ,
        TagBoxNote->"97"],
       StyleBox["97", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[97, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, {0.7, 97.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{276.7809747798238, 
          318.10653522818245`}, {-85.21904972323149, 115.72128254052315`}}],
        StatusArea[#, 97]& ,
        TagBoxNote->"97"],
       StyleBox["97", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[97, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.8, 95.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{317.48153522818245`, 
          358.8070956765412}, {-81.0888366868654, 115.72128254052315`}}],
        StatusArea[#, 95]& ,
        TagBoxNote->"95"],
       StyleBox["95", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[95, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.9, 104.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{358.1820956765412, 
          399.5076561248999}, {-99.67479535051275, 115.72128254052315`}}],
        StatusArea[#, 104]& ,
        TagBoxNote->"104"],
       StyleBox["104", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[104, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {1., 92.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{398.8826561248999, 
          440.20821657325854`}, {-74.89351713231629, 115.72128254052315`}}],
        StatusArea[#, 92]& ,
        TagBoxNote->"92"],
       StyleBox["92", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[92, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.749131661505524*^9, 
  3.749131687631962*^9}},ExpressionUUID->"364e30e4-4adb-498d-97ef-\
8aa8ec9fea9d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PieChart", "Section",
 CellChangeTimes->{{3.749131716461995*^9, 
  3.7491317176307926`*^9}},ExpressionUUID->"1f55c680-ad56-4c7d-8101-\
73b959ab1e4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.749131718839898*^9, 
  3.7491317264466524`*^9}},ExpressionUUID->"226b4409-5104-425a-9593-\
84347a146d37"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$24673$24707 = False, 
    DynamicChart`click$24680$24707 = False, DynamicChart`click$24684$24707 = 
    False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 DiskBox[{0, 0}, 1., {2.356194490192345, 3.141592653589793}]},
                
                ImageSizeCache->{{39.83578643762692, 
                 226.4142135623731}, {-134.3450846054012, \
-1.5857864376268935`}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24673$24707, 
                FEPrivate`Not[DynamicChart`click$24673$24707]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$24673$24707, {{{1., 0}, {
               0, 1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$24673$24707}]]}, 
         {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 DiskBox[{0, 0}, 1., {0.7853981633974483, 2.356194490192345}]},
                
                ImageSizeCache->{{93.65491539459882, 
                 356.3450846054012}, {-188.16421356237308`, \
-1.5857864376268935`}}],
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24680$24707, 
                FEPrivate`Not[DynamicChart`click$24680$24707]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$24680$24707, {{{1., 0}, {0, 1.}}, {
              1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
             1}}], TrackedSymbols :> {DynamicChart`click$24680$24707}]]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 1., {-3.141592653589793, 
                  0.7853981633974483}]},
                
                ImageSizeCache->{{39.83578643762692, 
                 410.1642135623731}, {-134.34508460540124`, 
                 182.16421356237308`}}],
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24684$24707, 
                FEPrivate`Not[DynamicChart`click$24684$24707]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$24684$24707, {{{1., 0}, {0, 1.}}, {
              0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {
             DynamicChart`click$24684$24707}]]}}}, {}}, {}}, {{{
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24673$24707, 
              FEPrivate`Not[DynamicChart`click$24673$24707]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$24673$24707, {{{1., 0}, {
             0, 1.}}, {-0.18477590650225736`, 0.07653668647301798}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$24673$24707}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24680$24707, 
              FEPrivate`Not[DynamicChart`click$24680$24707]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$24680$24707, {{{1., 0}, {0, 1.}}, {
            1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
           1}}], TrackedSymbols :> {DynamicChart`click$24680$24707}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 5]& ,
             TagBoxNote->"5"],
            StyleBox["5", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[5, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$24684$24707, 
              FEPrivate`Not[DynamicChart`click$24684$24707]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$24684$24707, {{{1., 0}, {0, 1.}}, {
            0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0, 1}}, {{
           1, 0}, {0, 1}}], 
          TrackedSymbols :> {
           DynamicChart`click$24684$24707}]]}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{
  3.749131727555691*^9},ExpressionUUID->"8f3aaf17-4499-4f1e-9350-\
357131a8774c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1037},
WindowMargins->{{1912, Automatic}, {Automatic, -8}},
Magnification->1.25,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 121, "Title",ExpressionUUID->"194a0681-134b-4bdb-8b7c-0a4af7b3f7d2"],
Cell[754, 27, 212, 4, 71, "Text",ExpressionUUID->"76016fd5-6da7-4176-a6a8-96930d376508"],
Cell[969, 33, 434, 11, 43, "Text",ExpressionUUID->"416625ed-2330-4171-98bc-72be12c1d16b"],
Cell[CellGroupData[{
Cell[1428, 48, 151, 3, 83, "Section",ExpressionUUID->"8a67ae36-85ad-4583-91eb-c24208147c18"],
Cell[CellGroupData[{
Cell[1604, 55, 1145, 29, 204, "Input",ExpressionUUID->"21a4f68e-cf05-42d3-a720-c1f8fd4c7855"],
Cell[2752, 86, 16706, 294, 321, "Output",ExpressionUUID->"eac33fb3-7ebf-4d43-8986-f157720609c5"]
}, Open  ]],
Cell[19473, 383, 191, 3, 43, "Text",ExpressionUUID->"ce079a79-4908-4e8a-b816-890fd2e51b92"],
Cell[CellGroupData[{
Cell[19689, 390, 809, 22, 132, "Input",ExpressionUUID->"b6f862ac-ccb2-4d25-b1e8-bce5a804dec3"],
Cell[20501, 414, 40780, 726, 291, "Output",ExpressionUUID->"312ee1e5-d223-4152-9e64-35e8ef3a432c"]
}, Open  ]],
Cell[61296, 1143, 379, 9, 127, "Text",ExpressionUUID->"331690c2-5328-4f0c-b73b-be331e6cfdde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61712, 1157, 153, 3, 83, "Section",ExpressionUUID->"e75b7974-4672-40d3-9593-2b264f6c312d"],
Cell[CellGroupData[{
Cell[61890, 1164, 2311, 61, 420, "Input",ExpressionUUID->"a6cec7a4-e9c5-4d03-9cd3-75164b6a038f"],
Cell[64204, 1227, 35331, 628, 323, "Output",ExpressionUUID->"79954918-c0fc-48b5-bdea-2e5543eee0cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99584, 1861, 154, 3, 83, "Section",ExpressionUUID->"7c5009d0-3803-416c-a47a-b2fc0de0d565"],
Cell[CellGroupData[{
Cell[99763, 1868, 713, 19, 156, "Input",ExpressionUUID->"21165c4e-6201-4326-874c-275495187cd6"],
Cell[100479, 1889, 696, 19, 40, "Output",ExpressionUUID->"8a5718ee-98e2-48f1-8673-74e0b8cf2a76"],
Cell[101178, 1910, 1209, 35, 313, "Output",ExpressionUUID->"d995c111-ab4a-475a-8d3a-0abb5d36b86e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102424, 1950, 603, 19, 124, "Input",ExpressionUUID->"94697d97-dc72-46c4-a396-fdd4dfdf06bd"],
Cell[103030, 1971, 1251, 35, 289, "Output",ExpressionUUID->"9161595a-da67-4c93-98cc-436163b80e7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104318, 2011, 225, 5, 35, "Input",ExpressionUUID->"1ec6922f-a2a6-4bd6-9547-251b3af9e2c1"],
Cell[104546, 2018, 1274, 36, 289, "Output",ExpressionUUID->"1d4c9dd4-5247-4a97-8d84-85509b0ec1ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105857, 2059, 216, 5, 35, "Input",ExpressionUUID->"a9be0467-5455-4e62-b9b7-2344f1714a70"],
Cell[106076, 2066, 1411, 39, 289, "Output",ExpressionUUID->"7d5a357f-e3fc-4352-98eb-1f0e29b2370f"]
}, Open  ]],
Cell[107502, 2108, 165, 3, 43, "Text",ExpressionUUID->"9caa74c8-7010-4c56-b7c0-618120aa2d55"],
Cell[CellGroupData[{
Cell[107692, 2115, 774, 22, 84, "Input",ExpressionUUID->"1e64293d-4e16-4543-8ddf-6fbcd916c4d0"],
Cell[108469, 2139, 5051, 99, 294, "Output",ExpressionUUID->"dbab8469-9244-48a4-9f65-87611344558e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113557, 2243, 553, 15, 60, "Input",ExpressionUUID->"d14602fd-d73c-44a9-95e4-e6cebd126cdf"],
Cell[114113, 2260, 15565, 274, 294, "Output",ExpressionUUID->"42933607-fd49-4d51-8b41-981918cebef6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129715, 2539, 1020, 25, 228, "Input",ExpressionUUID->"b641c8b4-d03f-4ccc-9a28-443c9964177f"],
Cell[130738, 2566, 27410, 497, 310, "Output",ExpressionUUID->"406ee14b-5a74-4a2a-953c-109f4345c2ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158197, 3069, 159, 3, 83, "Section",ExpressionUUID->"1de7c140-5814-46a5-ba76-471607e0ae9a"],
Cell[158359, 3074, 179, 3, 43, "Text",ExpressionUUID->"b1635f97-9e0e-4983-a8fe-603d76e23c9e"],
Cell[CellGroupData[{
Cell[158563, 3081, 325, 9, 43, "Input",ExpressionUUID->"84aa7a71-7545-4164-8b25-3b19451b2e8b"],
Cell[158891, 3092, 4745, 97, 372, "Output",ExpressionUUID->"00fb24d7-288d-4f5c-817e-9f319c902068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163673, 3194, 404, 11, 70, "Input",ExpressionUUID->"41b69737-99f6-446b-9f9d-da48d350623a"],
Cell[164080, 3207, 4133, 97, 385, "Output",ExpressionUUID->"d1ebf21a-4604-4ab3-ba5f-600aeef0fff3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168250, 3309, 725, 18, 175, "Input",ExpressionUUID->"cdab4d25-7cba-4b93-a062-39be3e7de0a5"],
Cell[168978, 3329, 6471, 137, 385, "Output",ExpressionUUID->"7c2fb5ec-cf5a-4204-a4f5-7f7a5d19ad25"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175498, 3472, 156, 3, 103, "Section",ExpressionUUID->"b351bce7-eb18-46aa-b45b-5a6bef53650d"],
Cell[CellGroupData[{
Cell[175679, 3479, 552, 16, 135, "Input",ExpressionUUID->"ac658cd4-691c-45f5-b3eb-3479fc64644e"],
Cell[176234, 3497, 7187, 205, 373, "Output",ExpressionUUID->"364e30e4-4adb-498d-97ef-8aa8ec9fea9d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183470, 3708, 155, 3, 103, "Section",ExpressionUUID->"1f55c680-ad56-4c7d-8101-73b959ab1e4a"],
Cell[CellGroupData[{
Cell[183650, 3715, 246, 6, 43, "Input",ExpressionUUID->"226b4409-5104-425a-9593-84347a146d37"],
Cell[183899, 3723, 7518, 172, 588, "Output",ExpressionUUID->"8f3aaf17-4499-4f1e-9350-357131a8774c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

